<!DOCTYPE html>
<html lang="en" data-bs-theme="auto">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="theme-color" content="#712cf9">
        <title>{% block title %}Welcome!{% endblock %}</title>
        <link rel="icon" href="data:image/svg+xml">
        {% block stylesheets %}
            {{ encore_entry_link_tags('app') }}
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
        {% endblock %}
    </head>
    <body>

        {# include:flash messages #}
        {# TODO fix later #}
        {# {% include('flash_messages.html.twig') %} #}
        {% include('alerts/alert.twig') %}
        {# end:flash messages #}

        {# include:collectionForm #}
        {% block asset_collection_form %}
            {# Because we are calling this method from anywhere on the site, we need to know what route it was called from #}
            {% set currentPath = app.request.attributes.get('_route') %}
            {% set currentPathParams = app.request.attributes.get('_route_params') %}
            {{ render(controller(
                'App\\Controller\\AssetController::checkInForm', {'requestingPath': currentPath, 'requestingPathParams': currentPathParams})
            ) }}
        {% endblock %}

        {# include:navigation #}
        {% block top_navigation %}
            {% include('_top_navigation.html.twig') %}
        {% endblock %}

        {# begin:body #}
        <main class="px-4 h-100 flex-shrink-0 mb-4">
            <div class="container-fluid">
                <div class="card">
                    <div class="card-body">
                        {% block body %}{% endblock %}
                    </div>
                </div>
            </div>
        </main>
        {# end:body #}

        {# begin:footer #}
        {% block footer %}
            <footer class="page-footer mt-auto font-small bg-body-tertiary py-2 pt-3 align-middle">
                <div class="container-fluid align-middle">
                    <div class="row w-100">
                        <div class="col">
                            Asset Management <div class="vr mx-2"></div><a href="https://github.com/ajrockr/AssetManagement"><i class="fa-brands fa-github"></i></a>
                        </div>
                        <div class="col text-end">
                            <small>Version 1.0.0 DEV</small>
                        </div>
                    </div>
                </div>
            </footer>
        {% endblock %}
        {# end:footer #}

        {# begin:javascript #}
        {% block javascripts %}
            {{ encore_entry_script_tags('app') }}
            <script type="text/javascript">
                /*!
                 * Color mode toggler for Bootstrap's docs (https://getbootstrap.com/)
                 * Copyright 2011-2023 The Bootstrap Authors
                 * Licensed under the Creative Commons Attribution 3.0 Unported License.
                 */

                (() => {
                'use strict'

                const storedTheme = localStorage.getItem('theme')

                const getPreferredTheme = () => {
                    if (storedTheme) {
                    return storedTheme
                    }

                    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
                }

                const setTheme = function (theme) {
                    if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    document.documentElement.setAttribute('data-bs-theme', 'dark')
                    } else {
                    document.documentElement.setAttribute('data-bs-theme', theme)
                    }
                }

                setTheme(getPreferredTheme())

                const showActiveTheme = (theme, focus = false) => {
                    const themeSwitcher = document.querySelector('#bd-theme')

                    if (!themeSwitcher) {
                    return
                    }

                    const themeSwitcherText = document.querySelector('#bd-theme-text')
                    const activeThemeIcon = document.querySelector('.theme-icon-active i')
                    const btnToActive = document.querySelector(`[data-bs-theme-value="${theme}"]`)
                    const svgOfActiveBtn = btnToActive.querySelector('i').getAttribute('class')

                    for (const element of document.querySelectorAll('[data-bs-theme-value]')) {
                    element.classList.remove('active')
                    element.setAttribute('aria-pressed', 'false')
                    }

                    btnToActive.classList.add('active')
                    btnToActive.setAttribute('aria-pressed', 'true')
                    activeThemeIcon.setAttribute('class', svgOfActiveBtn)
                    const themeSwitcherLabel = `${themeSwitcherText.textContent} (${btnToActive.dataset.bsThemeValue})`
                    themeSwitcher.setAttribute('aria-label', themeSwitcherLabel)

                    if (focus) {
                    themeSwitcher.focus()
                    }
                }

                window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
                    if (storedTheme !== 'light' || storedTheme !== 'dark') {
                    setTheme(getPreferredTheme())
                    }
                })

                window.addEventListener('DOMContentLoaded', () => {
                    showActiveTheme(getPreferredTheme())

                    for (const toggle of document.querySelectorAll('[data-bs-theme-value]')) {
                    toggle.addEventListener('click', () => {
                        const theme = toggle.getAttribute('data-bs-theme-value')
                        localStorage.setItem('theme', theme)
                        setTheme(theme)
                        showActiveTheme(theme, true)
                    })
                    }
                })
                })()
            </script>
        {% endblock %}
        {# end:javascript #}

        {# Asset Collected Modal #}
        {% include('alerts/assetCollected.html.twig') %}
    </body>
</html>
