// /assets/styles/_theme.scss

$themes: (
  lightTheme: (
    "bg-color": $--color-bg-light,
    "text-color": $--color-text-light,
    "text-color-secondary": $--color-text-secondary-light,
    "link-color": $--color-link-light,
    "link-color-hover": $--color-link-hover-light,
    "border-color": $--color-border-light
  ),
  darkTheme: (
    "bg-color": $--color-bg-dark,
    "text-color": $--color-text-dark,
    "text-color-secondary": $--color-text-secondary-dark,
    "link-color": $--color-link-dark,
    "link-color-hover": $--color-link-hover-dark,
    "border-color": $--color-border-dark
  )
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}
